
/**
 * 代理模式
 * 定义：为另一个对象提供一个替身或占位符以控制对这个对象的访问。
 * 
 * 注：使用代理模式创建代表对象，让代表对象控制某对象的访问，被代理的对象可以是
 * 远程的对象、创建开销大的对象或需要安全控制的对象。
 * 
 * 要点：
 * ①代理模式为另一个对象提供代表，以便控制客户对对象的访问，管理访问的方式有许多种。
 * ②远程代理管理客户和远程对象之间的交互
 * ③虚拟代理控制访问实例化开销比较大的对象
 * ④保护代理基于调用者控制对象方法的访问
 * ⑤代理模式有许多变体，例如：缓存代理、同步代理、防火墙代理和写入时复制代理
 * ⑥代理在结构上类似装饰者，但是目的不同：装饰者模式为对象加上行为，而代理则是控制访问
 * ⑦Java内置的代理技术，可以根据需要建立动态代理，并将所有调用分配到所选的处理器
 * ⑧就和其他的包装者一样，代理会造成设计中类的数目增加。
 * ⑨Java中的动态代理：动态代理之所以被称为动态，是因为运行时才将它的类创建出来。代码开始执行时，
 * 还没有Proxy类，它是根据需要从你传入的接口集创建的。
 * ⑩在Java动态代理中：InvocationHandler根本就不是Proxy，它只是一个帮助proxy的辅助类，
 * proxy会把调用转发给它处理。Proxy本身是利用静态的Proxy.newProxyInstance()方法在运行时
 * 动态地创建的。
 * 
 * 实例：糖果机
 * 通过监视器来监控远程糖果机的运行状态，这里，监视器是客户端，糖果机是远程服务端。通过创建糖果机的代理，
 * 监视器调用糖果机代理类中的方法，就好像监视器真的调用糖果机中的方法一样。此处，代理类负责和远程糖果机
 * 之间进行通信。
 * 
 * */

public class _13_DaiLiMode {

	public static void main(String[] args) {
		
	}
}
